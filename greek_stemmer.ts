import { Rule, Stemmer } from "./_stemmer.ts";

const a_0: Rule[] = [
  ["", -1, 25],
  ["\u0386", 0, 1],
  ["\u0388", 0, 5],
  ["\u0389", 0, 7],
  ["\u038A", 0, 9],
  ["\u038C", 0, 15],
  ["\u038E", 0, 20],
  ["\u038F", 0, 24],
  ["\u0390", 0, 7],
  ["\u0391", 0, 1],
  ["\u0392", 0, 2],
  ["\u0393", 0, 3],
  ["\u0394", 0, 4],
  ["\u0395", 0, 5],
  ["\u0396", 0, 6],
  ["\u0397", 0, 7],
  ["\u0398", 0, 8],
  ["\u0399", 0, 9],
  ["\u039A", 0, 10],
  ["\u039B", 0, 11],
  ["\u039C", 0, 12],
  ["\u039D", 0, 13],
  ["\u039E", 0, 14],
  ["\u039F", 0, 15],
  ["\u03A0", 0, 16],
  ["\u03A1", 0, 17],
  ["\u03A3", 0, 18],
  ["\u03A4", 0, 19],
  ["\u03A5", 0, 20],
  ["\u03A6", 0, 21],
  ["\u03A7", 0, 22],
  ["\u03A8", 0, 23],
  ["\u03A9", 0, 24],
  ["\u03AA", 0, 9],
  ["\u03AB", 0, 20],
  ["\u03AC", 0, 1],
  ["\u03AD", 0, 5],
  ["\u03AE", 0, 7],
  ["\u03AF", 0, 9],
  ["\u03B0", 0, 20],
  ["\u03C2", 0, 18],
  ["\u03CA", 0, 7],
  ["\u03CB", 0, 20],
  ["\u03CC", 0, 15],
  ["\u03CD", 0, 20],
  ["\u03CE", 0, 24],
];

const a_1: Rule[] = [
  ["\u03C3\u03BA\u03B1\u03B3\u03B9\u03B1", -1, 2],
  ["\u03C6\u03B1\u03B3\u03B9\u03B1", -1, 1],
  ["\u03BF\u03BB\u03BF\u03B3\u03B9\u03B1", -1, 3],
  ["\u03C3\u03BF\u03B3\u03B9\u03B1", -1, 4],
  ["\u03C4\u03B1\u03C4\u03BF\u03B3\u03B9\u03B1", -1, 5],
  ["\u03BA\u03C1\u03B5\u03B1\u03C4\u03B1", -1, 6],
  ["\u03C0\u03B5\u03C1\u03B1\u03C4\u03B1", -1, 7],
  ["\u03C4\u03B5\u03C1\u03B1\u03C4\u03B1", -1, 8],
  ["\u03B3\u03B5\u03B3\u03BF\u03BD\u03BF\u03C4\u03B1", -1, 11],
  ["\u03BA\u03B1\u03B8\u03B5\u03C3\u03C4\u03C9\u03C4\u03B1", -1, 10],
  ["\u03C6\u03C9\u03C4\u03B1", -1, 9],
  ["\u03C0\u03B5\u03C1\u03B1\u03C4\u03B7", -1, 7],
  ["\u03C3\u03BA\u03B1\u03B3\u03B9\u03C9\u03BD", -1, 2],
  ["\u03C6\u03B1\u03B3\u03B9\u03C9\u03BD", -1, 1],
  ["\u03BF\u03BB\u03BF\u03B3\u03B9\u03C9\u03BD", -1, 3],
  ["\u03C3\u03BF\u03B3\u03B9\u03C9\u03BD", -1, 4],
  ["\u03C4\u03B1\u03C4\u03BF\u03B3\u03B9\u03C9\u03BD", -1, 5],
  ["\u03BA\u03C1\u03B5\u03B1\u03C4\u03C9\u03BD", -1, 6],
  ["\u03C0\u03B5\u03C1\u03B1\u03C4\u03C9\u03BD", -1, 7],
  ["\u03C4\u03B5\u03C1\u03B1\u03C4\u03C9\u03BD", -1, 8],
  ["\u03B3\u03B5\u03B3\u03BF\u03BD\u03BF\u03C4\u03C9\u03BD", -1, 11],
  ["\u03BA\u03B1\u03B8\u03B5\u03C3\u03C4\u03C9\u03C4\u03C9\u03BD", -1, 10],
  ["\u03C6\u03C9\u03C4\u03C9\u03BD", -1, 9],
  ["\u03BA\u03C1\u03B5\u03B1\u03C3", -1, 6],
  ["\u03C0\u03B5\u03C1\u03B1\u03C3", -1, 7],
  ["\u03C4\u03B5\u03C1\u03B1\u03C3", -1, 8],
  ["\u03B3\u03B5\u03B3\u03BF\u03BD\u03BF\u03C3", -1, 11],
  ["\u03BA\u03C1\u03B5\u03B1\u03C4\u03BF\u03C3", -1, 6],
  ["\u03C0\u03B5\u03C1\u03B1\u03C4\u03BF\u03C3", -1, 7],
  ["\u03C4\u03B5\u03C1\u03B1\u03C4\u03BF\u03C3", -1, 8],
  ["\u03B3\u03B5\u03B3\u03BF\u03BD\u03BF\u03C4\u03BF\u03C3", -1, 11],
  ["\u03BA\u03B1\u03B8\u03B5\u03C3\u03C4\u03C9\u03C4\u03BF\u03C3", -1, 10],
  ["\u03C6\u03C9\u03C4\u03BF\u03C3", -1, 9],
  ["\u03BA\u03B1\u03B8\u03B5\u03C3\u03C4\u03C9\u03C3", -1, 10],
  ["\u03C6\u03C9\u03C3", -1, 9],
  ["\u03C3\u03BA\u03B1\u03B3\u03B9\u03BF\u03C5", -1, 2],
  ["\u03C6\u03B1\u03B3\u03B9\u03BF\u03C5", -1, 1],
  ["\u03BF\u03BB\u03BF\u03B3\u03B9\u03BF\u03C5", -1, 3],
  ["\u03C3\u03BF\u03B3\u03B9\u03BF\u03C5", -1, 4],
  ["\u03C4\u03B1\u03C4\u03BF\u03B3\u03B9\u03BF\u03C5", -1, 5],
];

const a_2: Rule[] = [
  ["\u03C0\u03B1", -1, 1],
  ["\u03BE\u03B1\u03BD\u03B1\u03C0\u03B1", 0, 1],
  ["\u03B5\u03C0\u03B1", 0, 1],
  ["\u03C0\u03B5\u03C1\u03B9\u03C0\u03B1", 0, 1],
  ["\u03B1\u03BD\u03B1\u03BC\u03C0\u03B1", 0, 1],
  ["\u03B5\u03BC\u03C0\u03B1", 0, 1],
  ["\u03B2", -1, 2],
  ["\u03B4\u03B1\u03BD\u03B5", -1, 1],
  ["\u03B2\u03B1\u03B8\u03C5\u03C1\u03B9", -1, 2],
  ["\u03B2\u03B1\u03C1\u03BA", -1, 2],
  ["\u03BC\u03B1\u03C1\u03BA", -1, 2],
  ["\u03BB", -1, 2],
  ["\u03BC", -1, 2],
  ["\u03BA\u03BF\u03C1\u03BD", -1, 2],
  ["\u03B1\u03B8\u03C1\u03BF", -1, 1],
  ["\u03C3\u03C5\u03BD\u03B1\u03B8\u03C1\u03BF", 14, 1],
  ["\u03C0", -1, 2],
  ["\u03B9\u03BC\u03C0", 16, 2],
  ["\u03C1", -1, 2],
  ["\u03BC\u03B1\u03C1", 18, 2],
  ["\u03B1\u03BC\u03C0\u03B1\u03C1", 18, 2],
  ["\u03B3\u03BA\u03C1", 18, 2],
  ["\u03B2\u03BF\u03BB\u03B2\u03BF\u03C1", 18, 2],
  ["\u03B3\u03BB\u03C5\u03BA\u03BF\u03C1", 18, 2],
  ["\u03C0\u03B9\u03C0\u03B5\u03C1\u03BF\u03C1", 18, 2],
  ["\u03C0\u03C1", 18, 2],
  ["\u03BC\u03C0\u03C1", 25, 2],
  ["\u03B1\u03C1\u03C1", 18, 2],
  ["\u03B3\u03BB\u03C5\u03BA\u03C5\u03C1", 18, 2],
  ["\u03C0\u03BF\u03BB\u03C5\u03C1", 18, 2],
  ["\u03BB\u03BF\u03C5", -1, 2],
];

const a_3: Rule[] = [
  ["\u03B9\u03B6\u03B1", -1, 1],
  ["\u03B9\u03B6\u03B5", -1, 1],
  ["\u03B9\u03B6\u03B1\u03BC\u03B5", -1, 1],
  ["\u03B9\u03B6\u03BF\u03C5\u03BC\u03B5", -1, 1],
  ["\u03B9\u03B6\u03B1\u03BD\u03B5", -1, 1],
  ["\u03B9\u03B6\u03BF\u03C5\u03BD\u03B5", -1, 1],
  ["\u03B9\u03B6\u03B1\u03C4\u03B5", -1, 1],
  ["\u03B9\u03B6\u03B5\u03C4\u03B5", -1, 1],
  ["\u03B9\u03B6\u03B5\u03B9", -1, 1],
  ["\u03B9\u03B6\u03B1\u03BD", -1, 1],
  ["\u03B9\u03B6\u03BF\u03C5\u03BD", -1, 1],
  ["\u03B9\u03B6\u03B5\u03C3", -1, 1],
  ["\u03B9\u03B6\u03B5\u03B9\u03C3", -1, 1],
  ["\u03B9\u03B6\u03C9", -1, 1],
];

const a_4: Rule[] = [
  ["\u03B2\u03B9", -1, 1],
  ["\u03BB\u03B9", -1, 1],
  ["\u03B1\u03BB", -1, 1],
  ["\u03B5\u03BD", -1, 1],
  ["\u03C3", -1, 1],
  ["\u03C7", -1, 1],
  ["\u03C5\u03C8", -1, 1],
  ["\u03B6\u03C9", -1, 1],
];

const a_5: Rule[] = [
  ["\u03C9\u03B8\u03B7\u03BA\u03B1", -1, 1],
  ["\u03C9\u03B8\u03B7\u03BA\u03B5", -1, 1],
  ["\u03C9\u03B8\u03B7\u03BA\u03B1\u03BC\u03B5", -1, 1],
  ["\u03C9\u03B8\u03B7\u03BA\u03B1\u03BD\u03B5", -1, 1],
  ["\u03C9\u03B8\u03B7\u03BA\u03B1\u03C4\u03B5", -1, 1],
  ["\u03C9\u03B8\u03B7\u03BA\u03B1\u03BD", -1, 1],
  ["\u03C9\u03B8\u03B7\u03BA\u03B5\u03C3", -1, 1],
];

const a_6: Rule[] = [
  ["\u03BE\u03B1\u03BD\u03B1\u03C0\u03B1", -1, 1],
  ["\u03B5\u03C0\u03B1", -1, 1],
  ["\u03C0\u03B5\u03C1\u03B9\u03C0\u03B1", -1, 1],
  ["\u03B1\u03BD\u03B1\u03BC\u03C0\u03B1", -1, 1],
  ["\u03B5\u03BC\u03C0\u03B1", -1, 1],
  ["\u03C7\u03B1\u03C1\u03C4\u03BF\u03C0\u03B1", -1, 1],
  ["\u03B5\u03BE\u03B1\u03C1\u03C7\u03B1", -1, 1],
  ["\u03B3\u03B5", -1, 2],
  ["\u03B3\u03BA\u03B5", -1, 2],
  ["\u03BA\u03BB\u03B5", -1, 1],
  ["\u03B5\u03BA\u03BB\u03B5", 9, 1],
  ["\u03B1\u03C0\u03B5\u03BA\u03BB\u03B5", 10, 1],
  ["\u03B1\u03C0\u03BF\u03BA\u03BB\u03B5", 9, 1],
  ["\u03B5\u03C3\u03C9\u03BA\u03BB\u03B5", 9, 1],
  ["\u03B4\u03B1\u03BD\u03B5", -1, 1],
  ["\u03C0\u03B5", -1, 1],
  ["\u03B5\u03C0\u03B5", 15, 1],
  ["\u03BC\u03B5\u03C4\u03B5\u03C0\u03B5", 16, 1],
  ["\u03B5\u03C3\u03B5", -1, 1],
  ["\u03B3\u03BA", -1, 2],
  ["\u03BC", -1, 2],
  ["\u03C0\u03BF\u03C5\u03BA\u03B1\u03BC", 20, 2],
  ["\u03BA\u03BF\u03BC", 20, 2],
  ["\u03B1\u03BD", -1, 2],
  ["\u03BF\u03BB\u03BF", -1, 2],
  ["\u03B1\u03B8\u03C1\u03BF", -1, 1],
  ["\u03C3\u03C5\u03BD\u03B1\u03B8\u03C1\u03BF", 25, 1],
  ["\u03C0", -1, 2],
  ["\u03BB\u03B1\u03C1", -1, 2],
  ["\u03B4\u03B7\u03BC\u03BF\u03BA\u03C1\u03B1\u03C4", -1, 2],
  ["\u03B1\u03C6", -1, 2],
  ["\u03B3\u03B9\u03B3\u03B1\u03BD\u03C4\u03BF\u03B1\u03C6", 30, 2],
];

const a_7: Rule[] = [
  ["\u03B9\u03C3\u03B1", -1, 1],
  ["\u03B9\u03C3\u03B1\u03BC\u03B5", -1, 1],
  ["\u03B9\u03C3\u03B1\u03BD\u03B5", -1, 1],
  ["\u03B9\u03C3\u03B5", -1, 1],
  ["\u03B9\u03C3\u03B1\u03C4\u03B5", -1, 1],
  ["\u03B9\u03C3\u03B1\u03BD", -1, 1],
  ["\u03B9\u03C3\u03B5\u03C3", -1, 1],
];

const a_8: Rule[] = [
  ["\u03BE\u03B1\u03BD\u03B1\u03C0\u03B1", -1, 1],
  ["\u03B5\u03C0\u03B1", -1, 1],
  ["\u03C0\u03B5\u03C1\u03B9\u03C0\u03B1", -1, 1],
  ["\u03B1\u03BD\u03B1\u03BC\u03C0\u03B1", -1, 1],
  ["\u03B5\u03BC\u03C0\u03B1", -1, 1],
  ["\u03C7\u03B1\u03C1\u03C4\u03BF\u03C0\u03B1", -1, 1],
  ["\u03B5\u03BE\u03B1\u03C1\u03C7\u03B1", -1, 1],
  ["\u03BA\u03BB\u03B5", -1, 1],
  ["\u03B5\u03BA\u03BB\u03B5", 7, 1],
  ["\u03B1\u03C0\u03B5\u03BA\u03BB\u03B5", 8, 1],
  ["\u03B1\u03C0\u03BF\u03BA\u03BB\u03B5", 7, 1],
  ["\u03B5\u03C3\u03C9\u03BA\u03BB\u03B5", 7, 1],
  ["\u03B4\u03B1\u03BD\u03B5", -1, 1],
  ["\u03C0\u03B5", -1, 1],
  ["\u03B5\u03C0\u03B5", 13, 1],
  ["\u03BC\u03B5\u03C4\u03B5\u03C0\u03B5", 14, 1],
  ["\u03B5\u03C3\u03B5", -1, 1],
  ["\u03B1\u03B8\u03C1\u03BF", -1, 1],
  ["\u03C3\u03C5\u03BD\u03B1\u03B8\u03C1\u03BF", 17, 1],
];

const a_9: Rule[] = [
  ["\u03B9\u03C3\u03BF\u03C5\u03BC\u03B5", -1, 1],
  ["\u03B9\u03C3\u03BF\u03C5\u03BD\u03B5", -1, 1],
  ["\u03B9\u03C3\u03B5\u03C4\u03B5", -1, 1],
  ["\u03B9\u03C3\u03B5\u03B9", -1, 1],
  ["\u03B9\u03C3\u03BF\u03C5\u03BD", -1, 1],
  ["\u03B9\u03C3\u03B5\u03B9\u03C3", -1, 1],
  ["\u03B9\u03C3\u03C9", -1, 1],
];

const a_10: Rule[] = [
  ["\u03B1\u03C4\u03B1", -1, 2],
  ["\u03C6\u03B1", -1, 2],
  ["\u03B7\u03C6\u03B1", 1, 2],
  ["\u03BC\u03B5\u03B3", -1, 2],
  ["\u03BB\u03C5\u03B3", -1, 2],
  ["\u03B7\u03B4", -1, 2],
  ["\u03BA\u03BB\u03B5", -1, 1],
  ["\u03B5\u03C3\u03C9\u03BA\u03BB\u03B5", 6, 1],
  ["\u03C0\u03BB\u03B5", -1, 1],
  ["\u03B4\u03B1\u03BD\u03B5", -1, 1],
  ["\u03C3\u03B5", -1, 1],
  ["\u03B1\u03C3\u03B5", 10, 1],
  ["\u03BA\u03B1\u03B8", -1, 2],
  ["\u03B5\u03C7\u03B8", -1, 2],
  ["\u03BA\u03B1\u03BA", -1, 2],
  ["\u03BC\u03B1\u03BA", -1, 2],
  ["\u03C3\u03BA", -1, 2],
  ["\u03C6\u03B9\u03BB", -1, 2],
  ["\u03BA\u03C5\u03BB", -1, 2],
  ["\u03BC", -1, 2],
  ["\u03B3\u03B5\u03BC", 19, 2],
  ["\u03B1\u03C7\u03BD", -1, 2],
  ["\u03C3\u03C5\u03BD\u03B1\u03B8\u03C1\u03BF", -1, 1],
  ["\u03C0", -1, 2],
  ["\u03B1\u03C0", 23, 2],
  ["\u03B5\u03BC\u03C0", 23, 2],
  ["\u03B5\u03C5\u03C0", 23, 2],
  ["\u03B1\u03C1", -1, 2],
  ["\u03B1\u03BF\u03C1", -1, 2],
  ["\u03B3\u03C5\u03C1", -1, 2],
  ["\u03C7\u03C1", -1, 2],
  ["\u03C7\u03C9\u03C1", -1, 2],
  ["\u03BA\u03C4", -1, 2],
  ["\u03B1\u03BA\u03C4", 32, 2],
  ["\u03C7\u03C4", -1, 2],
  ["\u03B1\u03C7\u03C4", 34, 2],
  ["\u03C4\u03B1\u03C7", -1, 2],
  ["\u03C3\u03C7", -1, 2],
  ["\u03B1\u03C3\u03C7", 37, 2],
  ["\u03C5\u03C8", -1, 2],
];

const a_11: Rule[] = [
  ["\u03B9\u03C3\u03C4\u03B1", -1, 1],
  ["\u03B9\u03C3\u03C4\u03B5", -1, 1],
  ["\u03B9\u03C3\u03C4\u03B7", -1, 1],
  ["\u03B9\u03C3\u03C4\u03BF\u03B9", -1, 1],
  ["\u03B9\u03C3\u03C4\u03C9\u03BD", -1, 1],
  ["\u03B9\u03C3\u03C4\u03BF", -1, 1],
  ["\u03B9\u03C3\u03C4\u03B5\u03C3", -1, 1],
  ["\u03B9\u03C3\u03C4\u03B7\u03C3", -1, 1],
  ["\u03B9\u03C3\u03C4\u03BF\u03C3", -1, 1],
  ["\u03B9\u03C3\u03C4\u03BF\u03C5\u03C3", -1, 1],
  ["\u03B9\u03C3\u03C4\u03BF\u03C5", -1, 1],
];

const a_12: Rule[] = [
  ["\u03B5\u03B3\u03BA\u03BB\u03B5", -1, 1],
  ["\u03B1\u03C0\u03BF\u03BA\u03BB\u03B5", -1, 1],
  ["\u03B4\u03B1\u03BD\u03B5", -1, 2],
  ["\u03B1\u03BD\u03C4\u03B9\u03B4\u03B1\u03BD\u03B5", 2, 2],
  ["\u03C3\u03B5", -1, 1],
  ["\u03BC\u03B5\u03C4\u03B1\u03C3\u03B5", 4, 1],
  ["\u03BC\u03B9\u03BA\u03C1\u03BF\u03C3\u03B5", 4, 1],
];

const a_13: Rule[] = [
  ["\u03B1\u03C4\u03BF\u03BC\u03B9\u03BA", -1, 2],
  ["\u03B5\u03B8\u03BD\u03B9\u03BA", -1, 4],
  ["\u03C4\u03BF\u03C0\u03B9\u03BA", -1, 7],
  ["\u03B5\u03BA\u03BB\u03B5\u03BA\u03C4\u03B9\u03BA", -1, 5],
  ["\u03C3\u03BA\u03B5\u03C0\u03C4\u03B9\u03BA", -1, 6],
  ["\u03B3\u03BD\u03C9\u03C3\u03C4\u03B9\u03BA", -1, 3],
  ["\u03B1\u03B3\u03BD\u03C9\u03C3\u03C4\u03B9\u03BA", 5, 1],
  ["\u03B1\u03BB\u03B5\u03BE\u03B1\u03BD\u03B4\u03C1\u03B9\u03BD", -1, 8],
  ["\u03B8\u03B5\u03B1\u03C4\u03C1\u03B9\u03BD", -1, 10],
  ["\u03B2\u03C5\u03B6\u03B1\u03BD\u03C4\u03B9\u03BD", -1, 9],
];

const a_14: Rule[] = [
  ["\u03B9\u03C3\u03BC\u03BF\u03B9", -1, 1],
  ["\u03B9\u03C3\u03BC\u03C9\u03BD", -1, 1],
  ["\u03B9\u03C3\u03BC\u03BF", -1, 1],
  ["\u03B9\u03C3\u03BC\u03BF\u03C3", -1, 1],
  ["\u03B9\u03C3\u03BC\u03BF\u03C5\u03C3", -1, 1],
  ["\u03B9\u03C3\u03BC\u03BF\u03C5", -1, 1],
];

const a_15: Rule[] = [
  ["\u03C3", -1, 1],
  ["\u03C7", -1, 1],
];

const a_16: Rule[] = [
  ["\u03BF\u03C5\u03B4\u03B1\u03BA\u03B9\u03B1", -1, 1],
  ["\u03B1\u03C1\u03B1\u03BA\u03B9\u03B1", -1, 1],
  ["\u03BF\u03C5\u03B4\u03B1\u03BA\u03B9", -1, 1],
  ["\u03B1\u03C1\u03B1\u03BA\u03B9", -1, 1],
];

const a_17: Rule[] = [
  ["\u03B2", -1, 2],
  ["\u03B2\u03B1\u03BC\u03B2", 0, 1],
  ["\u03C3\u03BB\u03BF\u03B2", 0, 1],
  ["\u03C4\u03C3\u03B5\u03C7\u03BF\u03C3\u03BB\u03BF\u03B2", 2, 1],
  ["\u03BA\u03B1\u03C1\u03B4", -1, 2],
  ["\u03B6", -1, 2],
  ["\u03C4\u03B6", 5, 1],
  ["\u03BA", -1, 1],
  ["\u03BA\u03B1\u03C0\u03B1\u03BA", 7, 1],
  ["\u03C3\u03BF\u03BA", 7, 1],
  ["\u03C3\u03BA", 7, 1],
  ["\u03B2\u03B1\u03BB", -1, 2],
  ["\u03BC\u03B1\u03BB", -1, 1],
  ["\u03B3\u03BB", -1, 2],
  ["\u03C4\u03C1\u03B9\u03C0\u03BF\u03BB", -1, 2],
  ["\u03C0\u03BB", -1, 1],
  ["\u03BB\u03BF\u03C5\u03BB", -1, 1],
  ["\u03C6\u03C5\u03BB", -1, 1],
  ["\u03BA\u03B1\u03B9\u03BC", -1, 1],
  ["\u03BA\u03BB\u03B9\u03BC", -1, 1],
  ["\u03C6\u03B1\u03C1\u03BC", -1, 1],
  ["\u03B3\u03B9\u03B1\u03BD", -1, 2],
  ["\u03C3\u03C0\u03B1\u03BD", -1, 1],
  ["\u03B7\u03B3\u03BF\u03C5\u03BC\u03B5\u03BD", -1, 2],
  ["\u03BA\u03BF\u03BD", -1, 1],
  ["\u03BC\u03B1\u03BA\u03C1\u03C5\u03BD", -1, 2],
  ["\u03C0", -1, 2],
  ["\u03BA\u03B1\u03C4\u03C1\u03B1\u03C0", 26, 1],
  ["\u03C1", -1, 1],
  ["\u03B2\u03C1", 28, 1],
  ["\u03BB\u03B1\u03B2\u03C1", 29, 1],
  ["\u03B1\u03BC\u03B2\u03C1", 29, 1],
  ["\u03BC\u03B5\u03C1", 28, 1],
  ["\u03C0\u03B1\u03C4\u03B5\u03C1", 28, 2],
  ["\u03B1\u03BD\u03B8\u03C1", 28, 1],
  ["\u03BA\u03BF\u03C1", 28, 1],
  ["\u03C3", -1, 1],
  ["\u03BD\u03B1\u03B3\u03BA\u03B1\u03C3", 36, 1],
  ["\u03C4\u03BF\u03C3", 36, 2],
  ["\u03BC\u03BF\u03C5\u03C3\u03C4", -1, 1],
  ["\u03C1\u03C5", -1, 1],
  ["\u03C6", -1, 1],
  ["\u03C3\u03C6", 41, 1],
  ["\u03B1\u03BB\u03B9\u03C3\u03C6", 42, 1],
  ["\u03BD\u03C5\u03C6", 41, 2],
  ["\u03C7", -1, 1],
];

const a_18: Rule[] = [
  ["\u03B1\u03BA\u03B9\u03B1", -1, 1],
  ["\u03B1\u03C1\u03B1\u03BA\u03B9\u03B1", 0, 1],
  ["\u03B9\u03C4\u03C3\u03B1", -1, 1],
  ["\u03B1\u03BA\u03B9", -1, 1],
  ["\u03B1\u03C1\u03B1\u03BA\u03B9", 3, 1],
  ["\u03B9\u03C4\u03C3\u03C9\u03BD", -1, 1],
  ["\u03B9\u03C4\u03C3\u03B1\u03C3", -1, 1],
  ["\u03B9\u03C4\u03C3\u03B5\u03C3", -1, 1],
];

const a_19: Rule[] = [
  ["\u03C8\u03B1\u03BB", -1, 1],
  ["\u03B1\u03B9\u03C6\u03BD", -1, 1],
  ["\u03BF\u03BB\u03BF", -1, 1],
  ["\u03B9\u03C1", -1, 1],
];

const a_20: Rule[] = [
  ["\u03B5", -1, 1],
  ["\u03C0\u03B1\u03B9\u03C7\u03BD", -1, 1],
];

const a_21: Rule[] = [
  ["\u03B9\u03B4\u03B9\u03B1", -1, 1],
  ["\u03B9\u03B4\u03B9\u03C9\u03BD", -1, 1],
  ["\u03B9\u03B4\u03B9\u03BF", -1, 1],
];

const a_22: Rule[] = [
  ["\u03B9\u03B2", -1, 1],
  ["\u03B4", -1, 1],
  ["\u03C6\u03C1\u03B1\u03B3\u03BA", -1, 1],
  ["\u03BB\u03C5\u03BA", -1, 1],
  ["\u03BF\u03B2\u03B5\u03BB", -1, 1],
  ["\u03BC\u03B7\u03BD", -1, 1],
  ["\u03C1", -1, 1],
];

const a_23: Rule[] = [
  ["\u03B9\u03C3\u03BA\u03B5", -1, 1],
  ["\u03B9\u03C3\u03BA\u03BF", -1, 1],
  ["\u03B9\u03C3\u03BA\u03BF\u03C3", -1, 1],
  ["\u03B9\u03C3\u03BA\u03BF\u03C5", -1, 1],
];

const a_24: Rule[] = [
  ["\u03B1\u03B4\u03C9\u03BD", -1, 1],
  ["\u03B1\u03B4\u03B5\u03C3", -1, 1],
];

const a_25: Rule[] = [
  ["\u03B3\u03B9\u03B1\u03B3\u03B9", -1, -1],
  ["\u03B8\u03B5\u03B9", -1, -1],
  ["\u03BF\u03BA", -1, -1],
  ["\u03BC\u03B1\u03BC", -1, -1],
  ["\u03BC\u03B1\u03BD", -1, -1],
  ["\u03BC\u03C0\u03B1\u03BC\u03C0", -1, -1],
  ["\u03C0\u03B5\u03B8\u03B5\u03C1", -1, -1],
  ["\u03C0\u03B1\u03C4\u03B5\u03C1", -1, -1],
  ["\u03BA\u03C5\u03C1", -1, -1],
  ["\u03BD\u03C4\u03B1\u03BD\u03C4", -1, -1],
];

const a_26: Rule[] = [
  ["\u03B5\u03B4\u03C9\u03BD", -1, 1],
  ["\u03B5\u03B4\u03B5\u03C3", -1, 1],
];

const a_27: Rule[] = [
  ["\u03BC\u03B9\u03BB", -1, 1],
  ["\u03B4\u03B1\u03C0", -1, 1],
  ["\u03B3\u03B7\u03C0", -1, 1],
  ["\u03B9\u03C0", -1, 1],
  ["\u03B5\u03BC\u03C0", -1, 1],
  ["\u03BF\u03C0", -1, 1],
  ["\u03BA\u03C1\u03B1\u03C3\u03C0", -1, 1],
  ["\u03C5\u03C0", -1, 1],
];

const a_28: Rule[] = [
  ["\u03BF\u03C5\u03B4\u03C9\u03BD", -1, 1],
  ["\u03BF\u03C5\u03B4\u03B5\u03C3", -1, 1],
];

const a_29: Rule[] = [
  ["\u03C4\u03C1\u03B1\u03B3", -1, 1],
  ["\u03C6\u03B5", -1, 1],
  ["\u03BA\u03B1\u03BB\u03B9\u03B1\u03BA", -1, 1],
  ["\u03B1\u03C1\u03BA", -1, 1],
  ["\u03C3\u03BA", -1, 1],
  ["\u03C0\u03B5\u03C4\u03B1\u03BB", -1, 1],
  ["\u03B2\u03B5\u03BB", -1, 1],
  ["\u03BB\u03BF\u03C5\u03BB", -1, 1],
  ["\u03C6\u03BB", -1, 1],
  ["\u03C7\u03BD", -1, 1],
  ["\u03C0\u03BB\u03B5\u03BE", -1, 1],
  ["\u03C3\u03C0", -1, 1],
  ["\u03C6\u03C1", -1, 1],
  ["\u03C3", -1, 1],
  ["\u03BB\u03B9\u03C7", -1, 1],
];

const a_30: Rule[] = [
  ["\u03B5\u03C9\u03BD", -1, 1],
  ["\u03B5\u03C9\u03C3", -1, 1],
];

const a_31: Rule[] = [
  ["\u03B4", -1, 1],
  ["\u03B9\u03B4", 0, 1],
  ["\u03B8", -1, 1],
  ["\u03B3\u03B1\u03BB", -1, 1],
  ["\u03B5\u03BB", -1, 1],
  ["\u03BD", -1, 1],
  ["\u03C0", -1, 1],
  ["\u03C0\u03B1\u03C1", -1, 1],
];

const a_32: Rule[] = [
  ["\u03B9\u03B1", -1, 1],
  ["\u03B9\u03C9\u03BD", -1, 1],
  ["\u03B9\u03BF\u03C5", -1, 1],
];

const a_33: Rule[] = [
  ["\u03B9\u03BA\u03B1", -1, 1],
  ["\u03B9\u03BA\u03C9\u03BD", -1, 1],
  ["\u03B9\u03BA\u03BF", -1, 1],
  ["\u03B9\u03BA\u03BF\u03C5", -1, 1],
];

const a_34: Rule[] = [
  ["\u03B1\u03B4", -1, 1],
  ["\u03C3\u03C5\u03BD\u03B1\u03B4", 0, 1],
  ["\u03BA\u03B1\u03C4\u03B1\u03B4", 0, 1],
  ["\u03B1\u03BD\u03C4\u03B9\u03B4", -1, 1],
  ["\u03B5\u03BD\u03B4", -1, 1],
  ["\u03C6\u03C5\u03BB\u03BF\u03B4", -1, 1],
  ["\u03C5\u03C0\u03BF\u03B4", -1, 1],
  ["\u03C0\u03C1\u03C9\u03C4\u03BF\u03B4", -1, 1],
  ["\u03B5\u03BE\u03C9\u03B4", -1, 1],
  ["\u03B7\u03B8", -1, 1],
  ["\u03B1\u03BD\u03B7\u03B8", 9, 1],
  ["\u03BE\u03B9\u03BA", -1, 1],
  ["\u03B1\u03BB", -1, 1],
  ["\u03B1\u03BC\u03BC\u03BF\u03C7\u03B1\u03BB", 12, 1],
  ["\u03C3\u03C5\u03BD\u03BF\u03BC\u03B7\u03BB", -1, 1],
  ["\u03BC\u03C0\u03BF\u03BB", -1, 1],
  ["\u03BC\u03BF\u03C5\u03BB", -1, 1],
  ["\u03C4\u03C3\u03B1\u03BC", -1, 1],
  ["\u03B2\u03C1\u03C9\u03BC", -1, 1],
  ["\u03B1\u03BC\u03B1\u03BD", -1, 1],
  ["\u03BC\u03C0\u03B1\u03BD", -1, 1],
  ["\u03BA\u03B1\u03BB\u03BB\u03B9\u03BD", -1, 1],
  ["\u03C0\u03BF\u03C3\u03C4\u03B5\u03BB\u03BD", -1, 1],
  ["\u03C6\u03B9\u03BB\u03BF\u03BD", -1, 1],
  ["\u03BA\u03B1\u03BB\u03C0", -1, 1],
  ["\u03B3\u03B5\u03C1", -1, 1],
  ["\u03C7\u03B1\u03C3", -1, 1],
  ["\u03BC\u03C0\u03BF\u03C3", -1, 1],
  ["\u03C0\u03BB\u03B9\u03B1\u03C4\u03C3", -1, 1],
  ["\u03C0\u03B5\u03C4\u03C3", -1, 1],
  ["\u03C0\u03B9\u03C4\u03C3", -1, 1],
  ["\u03C6\u03C5\u03C3", -1, 1],
  ["\u03BC\u03C0\u03B1\u03B3\u03B9\u03B1\u03C4", -1, 1],
  ["\u03BD\u03B9\u03C4", -1, 1],
  ["\u03C0\u03B9\u03BA\u03B1\u03BD\u03C4", -1, 1],
  ["\u03C3\u03B5\u03C1\u03C4", -1, 1],
];

const a_35: Rule[] = [
  ["\u03B1\u03B3\u03B1\u03BC\u03B5", -1, 1],
  ["\u03B7\u03BA\u03B1\u03BC\u03B5", -1, 1],
  ["\u03B7\u03B8\u03B7\u03BA\u03B1\u03BC\u03B5", 1, 1],
  ["\u03B7\u03C3\u03B1\u03BC\u03B5", -1, 1],
  ["\u03BF\u03C5\u03C3\u03B1\u03BC\u03B5", -1, 1],
];

const a_36: Rule[] = [
  ["\u03B2\u03BF\u03C5\u03B2", -1, 1],
  ["\u03BE\u03B5\u03B8", -1, 1],
  ["\u03C0\u03B5\u03B8", -1, 1],
  ["\u03B1\u03C0\u03BF\u03B8", -1, 1],
  ["\u03B1\u03C0\u03BF\u03BA", -1, 1],
  ["\u03BF\u03C5\u03BB", -1, 1],
  ["\u03B1\u03BD\u03B1\u03C0", -1, 1],
  ["\u03C0\u03B9\u03BA\u03C1", -1, 1],
  ["\u03C0\u03BF\u03C4", -1, 1],
  ["\u03B1\u03C0\u03BF\u03C3\u03C4", -1, 1],
  ["\u03C7", -1, 1],
  ["\u03C3\u03B9\u03C7", 10, 1],
];

const a_37: Rule[] = [
  ["\u03C4\u03C1", -1, 1],
  ["\u03C4\u03C3", -1, 1],
];

const a_38: Rule[] = [
  ["\u03B1\u03B3\u03B1\u03BD\u03B5", -1, 1],
  ["\u03B7\u03BA\u03B1\u03BD\u03B5", -1, 1],
  ["\u03B7\u03B8\u03B7\u03BA\u03B1\u03BD\u03B5", 1, 1],
  ["\u03B7\u03C3\u03B1\u03BD\u03B5", -1, 1],
  ["\u03BF\u03C5\u03C3\u03B1\u03BD\u03B5", -1, 1],
  ["\u03BF\u03BD\u03C4\u03B1\u03BD\u03B5", -1, 1],
  ["\u03B9\u03BF\u03BD\u03C4\u03B1\u03BD\u03B5", 5, 1],
  ["\u03BF\u03C5\u03BD\u03C4\u03B1\u03BD\u03B5", -1, 1],
  ["\u03B9\u03BF\u03C5\u03BD\u03C4\u03B1\u03BD\u03B5", 7, 1],
  ["\u03BF\u03C4\u03B1\u03BD\u03B5", -1, 1],
  ["\u03B9\u03BF\u03C4\u03B1\u03BD\u03B5", 9, 1],
];

// deno-fmt-ignore
const a_39: Rule[] = [
  ["\u03C4\u03B1\u03B2", -1, 1],
  ["\u03BD\u03C4\u03B1\u03B2", 0, 1],
  ["\u03C8\u03B7\u03BB\u03BF\u03C4\u03B1\u03B2", 0, 1],
  ["\u03BB\u03B9\u03B2", -1, 1],
  ["\u03BA\u03BB\u03B9\u03B2", 3, 1],
  ["\u03BE\u03B7\u03C1\u03BF\u03BA\u03BB\u03B9\u03B2", 4, 1],
  ["\u03B3", -1, 1],
  ["\u03B1\u03B3", 6, 1],
  ["\u03C4\u03C1\u03B1\u03B3", 7, 1],
  ["\u03C4\u03C3\u03B1\u03B3", 7, 1],
  ["\u03B1\u03B8\u03B9\u03B3\u03B3", 6, 1],
  ["\u03C4\u03C3\u03B9\u03B3\u03B3", 6, 1],
  ["\u03B1\u03C4\u03C3\u03B9\u03B3\u03B3", 11, 1],
  ["\u03C3\u03C4\u03B5\u03B3", 6, 1],
  ["\u03B1\u03C0\u03B7\u03B3", 6, 1],
  ["\u03C3\u03B9\u03B3", 6, 1],
  ["\u03B1\u03BD\u03BF\u03C1\u03B3", 6, 1],
  ["\u03B5\u03BD\u03BF\u03C1\u03B3", 6, 1],
  ["\u03BA\u03B1\u03BB\u03C0\u03BF\u03C5\u03B6", -1, 1],
  ["\u03B8", -1, 1],
  ["\u03BC\u03C9\u03B1\u03BC\u03B5\u03B8", 19, 1],
  ["\u03C0\u03B9\u03B8", 19, 1],
  ["\u03B1\u03C0\u03B9\u03B8", 21, 1],
  ["\u03B4\u03B5\u03BA", -1, 1],
  ["\u03C0\u03B5\u03BB\u03B5\u03BA", -1, 1],
  ["\u03B9\u03BA", -1, 1],
  ["\u03B1\u03BD\u03B9\u03BA", 25, 1],
  ["\u03B2\u03BF\u03C5\u03BB\u03BA", -1, 1],
  ["\u03B2\u03B1\u03C3\u03BA", -1, 1],
  ["\u03B2\u03C1\u03B1\u03C7\u03C5\u03BA", -1, 1],
  ["\u03B3\u03B1\u03BB", -1, 1],
  ["\u03BA\u03B1\u03C4\u03B1\u03B3\u03B1\u03BB", 30, 1],
  ["\u03BF\u03BB\u03BF\u03B3\u03B1\u03BB", 30, 1],
  ["\u03B2\u03B1\u03B8\u03C5\u03B3\u03B1\u03BB", 30, 1],
  ["\u03BC\u03B5\u03BB", -1, 1],
  ["\u03BA\u03B1\u03C3\u03C4\u03B5\u03BB", -1, 1],
  ["\u03C0\u03BF\u03C1\u03C4\u03BF\u03BB", -1, 1],
  ["\u03C0\u03BB", -1, 1],
  ["\u03B4\u03B9\u03C0\u03BB", 37, 1],
  ["\u03BB\u03B1\u03BF\u03C0\u03BB", 37, 1],
  ["\u03C8\u03C5\u03C7\u03BF\u03C0\u03BB", 37, 1],
  ["\u03BF\u03C5\u03BB", -1, 1],
  ["\u03BC", -1, 1],
  ["\u03BF\u03BB\u03B9\u03B3\u03BF\u03B4\u03B1\u03BC", 42, 1],
  ["\u03BC\u03BF\u03C5\u03C3\u03BF\u03C5\u03BB\u03BC", 42, 1],
  ["\u03B4\u03C1\u03B1\u03B4\u03BF\u03C5\u03BC", 42, 1],
  ["\u03B2\u03C1\u03B1\u03C7\u03BC", 42, 1],
  ["\u03BD", -1, 1],
  ["\u03B1\u03BC\u03B5\u03C1\u03B9\u03BA\u03B1\u03BD", 47, 1],
  ["\u03C0", -1, 1],
  ["\u03B1\u03B4\u03B1\u03C0", 49, 1],
  ["\u03C7\u03B1\u03BC\u03B7\u03BB\u03BF\u03B4\u03B1\u03C0", 49, 1],
  ["\u03C0\u03BF\u03BB\u03C5\u03B4\u03B1\u03C0", 49, 1],
  ["\u03BA\u03BF\u03C0", 49, 1],
  ["\u03C5\u03C0\u03BF\u03BA\u03BF\u03C0", 53, 1],
  ["\u03C4\u03C3\u03BF\u03C0", 49, 1],
  ["\u03C3\u03C0", 49, 1],
  ["\u03B5\u03C1", -1, 1],
  ["\u03B3\u03B5\u03C1", 57, 1],
  ["\u03B2\u03B5\u03C4\u03B5\u03C1", 57, 1],
  ["\u03BB\u03BF\u03C5\u03B8\u03B7\u03C1", -1, 1],
  ["\u03BA\u03BF\u03C1\u03BC\u03BF\u03C1", -1, 1],
  ["\u03C0\u03B5\u03C1\u03B9\u03C4\u03C1", -1, 1],
  ["\u03BF\u03C5\u03C1", -1, 1],
  ["\u03C3", -1, 1],
  ["\u03B2\u03B1\u03C3", 64, 1],
  ["\u03C0\u03BF\u03BB\u03B9\u03C3", 64, 1],
  ["\u03C3\u03B1\u03C1\u03B1\u03BA\u03B1\u03C4\u03C3", 64, 1],
  ["\u03B8\u03C5\u03C3", 64, 1],
  ["\u03B4\u03B9\u03B1\u03C4", -1, 1],
  ["\u03C0\u03BB\u03B1\u03C4", -1, 1],
  ["\u03C4\u03C3\u03B1\u03C1\u03BB\u03B1\u03C4", -1, 1],
  ["\u03C4\u03B5\u03C4", -1, 1],
  ["\u03C0\u03BF\u03C5\u03C1\u03B9\u03C4", -1, 1],
  ["\u03C3\u03BF\u03C5\u03BB\u03C4", -1, 1],
  ["\u03BC\u03B1\u03B9\u03BD\u03C4", -1, 1],
  ["\u03B6\u03C9\u03BD\u03C4", -1, 1],
  ["\u03BA\u03B1\u03C3\u03C4", -1, 1],
  ["\u03C6", -1, 1],
  ["\u03B4\u03B9\u03B1\u03C6", 78, 1],
  ["\u03C3\u03C4\u03B5\u03C6", 78, 1],
  ["\u03C6\u03C9\u03C4\u03BF\u03C3\u03C4\u03B5\u03C6", 80, 1],
  ["\u03C0\u03B5\u03C1\u03B7\u03C6", 78, 1],
  ["\u03C5\u03C0\u03B5\u03C1\u03B7\u03C6", 82, 1],
  ["\u03BA\u03BF\u03B9\u03BB\u03B1\u03C1\u03C6", 78, 1],
  ["\u03C0\u03B5\u03BD\u03C4\u03B1\u03C1\u03C6", 78, 1],
  ["\u03BF\u03C1\u03C6", 78, 1],
  ["\u03C7", -1, 1],
  ["\u03B1\u03BC\u03B7\u03C7", 87, 1],
  ["\u03B2\u03B9\u03BF\u03BC\u03B7\u03C7", 87, 1],
  ["\u03BC\u03B5\u03B3\u03BB\u03BF\u03B2\u03B9\u03BF\u03BC\u03B7\u03C7", 89, 1],
  [ "\u03BA\u03B1\u03C0\u03BD\u03BF\u03B2\u03B9\u03BF\u03BC\u03B7\u03C7", 89, 1],
  [ "\u03BC\u03B9\u03BA\u03C1\u03BF\u03B2\u03B9\u03BF\u03BC\u03B7\u03C7", 89, 1],
  ["\u03C0\u03BF\u03BB\u03C5\u03BC\u03B7\u03C7", 87, 1],
  ["\u03BB\u03B9\u03C7", 87, 1],
];

const a_40: Rule[] = [["\u03B7\u03C3\u03B5\u03C4\u03B5", -1, 1]];

const a_41: Rule[] = [
  ["\u03B5\u03BD\u03B4", -1, 1],
  ["\u03C3\u03C5\u03BD\u03B4", -1, 1],
  ["\u03BF\u03B4", -1, 1],
  ["\u03B4\u03B9\u03B1\u03B8", -1, 1],
  ["\u03BA\u03B1\u03B8", -1, 1],
  ["\u03C1\u03B1\u03B8", -1, 1],
  ["\u03C4\u03B1\u03B8", -1, 1],
  ["\u03C4\u03B9\u03B8", -1, 1],
  ["\u03B5\u03BA\u03B8", -1, 1],
  ["\u03B5\u03BD\u03B8", -1, 1],
  ["\u03C3\u03C5\u03BD\u03B8", -1, 1],
  ["\u03C1\u03BF\u03B8", -1, 1],
  ["\u03C5\u03C0\u03B5\u03C1\u03B8", -1, 1],
  ["\u03C3\u03B8", -1, 1],
  ["\u03B5\u03C5\u03B8", -1, 1],
  ["\u03B1\u03C1\u03BA", -1, 1],
  ["\u03C9\u03C6\u03B5\u03BB", -1, 1],
  ["\u03B2\u03BF\u03BB", -1, 1],
  ["\u03B1\u03B9\u03BD", -1, 1],
  ["\u03C0\u03BF\u03BD", -1, 1],
  ["\u03C1\u03BF\u03BD", -1, 1],
  ["\u03C3\u03C5\u03BD", -1, 1],
  ["\u03B2\u03B1\u03C1", -1, 1],
  ["\u03B2\u03C1", -1, 1],
  ["\u03B1\u03B9\u03C1", -1, 1],
  ["\u03C6\u03BF\u03C1", -1, 1],
  ["\u03B5\u03C5\u03C1", -1, 1],
  ["\u03C0\u03C5\u03C1", -1, 1],
  ["\u03C7\u03C9\u03C1", -1, 1],
  ["\u03BD\u03B5\u03C4", -1, 1],
  ["\u03C3\u03C7", -1, 1],
];

const a_42: Rule[] = [
  ["\u03C0\u03B1\u03B3", -1, 1],
  ["\u03B4", -1, 1],
  ["\u03B1\u03B4", 1, 1],
  ["\u03B8", -1, 1],
  ["\u03B1\u03B8", 3, 1],
  ["\u03C4\u03BF\u03BA", -1, 1],
  ["\u03C3\u03BA", -1, 1],
  ["\u03C0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB", -1, 1],
  ["\u03C3\u03BA\u03B5\u03BB", -1, 1],
  ["\u03B1\u03C0\u03BB", -1, 1],
  ["\u03B5\u03BC", -1, 1],
  ["\u03B1\u03BD", -1, 1],
  ["\u03B2\u03B5\u03BD", -1, 1],
  ["\u03B2\u03B1\u03C1\u03BF\u03BD", -1, 1],
  ["\u03BA\u03BF\u03C0", -1, 1],
  ["\u03C3\u03B5\u03C1\u03C0", -1, 1],
  ["\u03B1\u03B2\u03B1\u03C1", -1, 1],
  ["\u03B5\u03BD\u03B1\u03C1", -1, 1],
  ["\u03B1\u03B2\u03C1", -1, 1],
  ["\u03BC\u03C0\u03BF\u03C1", -1, 1],
  ["\u03B8\u03B1\u03C1\u03C1", -1, 1],
  ["\u03BD\u03C4\u03C1", -1, 1],
  ["\u03C5", -1, 1],
  ["\u03BD\u03B9\u03C6", -1, 1],
  ["\u03C3\u03C5\u03C1\u03C6", -1, 1],
];

const a_43: Rule[] = [
  ["\u03BF\u03BD\u03C4\u03B1\u03C3", -1, 1],
  ["\u03C9\u03BD\u03C4\u03B1\u03C3", -1, 1],
];

const a_44: Rule[] = [
  ["\u03BF\u03BC\u03B1\u03C3\u03C4\u03B5", -1, 1],
  ["\u03B9\u03BF\u03BC\u03B1\u03C3\u03C4\u03B5", 0, 1],
];

const a_45: Rule[] = [
  ["\u03C0", -1, 1],
  ["\u03B1\u03C0", 0, 1],
  ["\u03B1\u03BA\u03B1\u03C4\u03B1\u03C0", 1, 1],
  ["\u03C3\u03C5\u03BC\u03C0", 0, 1],
  ["\u03B1\u03C3\u03C5\u03BC\u03C0", 3, 1],
  ["\u03B1\u03BC\u03B5\u03C4\u03B1\u03BC\u03C6", -1, 1],
];

const a_46: Rule[] = [
  ["\u03B6", -1, 1],
  ["\u03B1\u03BB", -1, 1],
  ["\u03C0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB", 1, 1],
  ["\u03B5\u03BA\u03C4\u03B5\u03BB", -1, 1],
  ["\u03BC", -1, 1],
  ["\u03BE", -1, 1],
  ["\u03C0\u03C1\u03BF", -1, 1],
  ["\u03B1\u03C1", -1, 1],
  ["\u03BD\u03B9\u03C3", -1, 1],
];

const a_47: Rule[] = [
  ["\u03B7\u03B8\u03B7\u03BA\u03B1", -1, 1],
  ["\u03B7\u03B8\u03B7\u03BA\u03B5", -1, 1],
  ["\u03B7\u03B8\u03B7\u03BA\u03B5\u03C3", -1, 1],
];

const a_48: Rule[] = [
  ["\u03C0\u03B9\u03B8", -1, 1],
  ["\u03BF\u03B8", -1, 1],
  ["\u03BD\u03B1\u03C1\u03B8", -1, 1],
  ["\u03C3\u03BA\u03BF\u03C5\u03BB", -1, 1],
  ["\u03C3\u03BA\u03C9\u03BB", -1, 1],
  ["\u03C3\u03C6", -1, 1],
];

const a_49: Rule[] = [
  ["\u03B8", -1, 1],
  ["\u03B4\u03B9\u03B1\u03B8", 0, 1],
  ["\u03C0\u03B1\u03C1\u03B1\u03BA\u03B1\u03C4\u03B1\u03B8", 0, 1],
  ["\u03C3\u03C5\u03BD\u03B8", 0, 1],
  ["\u03C0\u03C1\u03BF\u03C3\u03B8", 0, 1],
];

const a_50: Rule[] = [
  ["\u03B7\u03BA\u03B1", -1, 1],
  ["\u03B7\u03BA\u03B5", -1, 1],
  ["\u03B7\u03BA\u03B5\u03C3", -1, 1],
];

const a_51: Rule[] = [
  ["\u03C6\u03B1\u03B3", -1, 1],
  ["\u03BB\u03B7\u03B3", -1, 1],
  ["\u03C6\u03C1\u03C5\u03B4", -1, 1],
  ["\u03BC\u03B1\u03BD\u03C4\u03B9\u03BB", -1, 1],
  ["\u03BC\u03B1\u03BB\u03BB", -1, 1],
  ["\u03BF\u03BC", -1, 1],
  ["\u03B2\u03BB\u03B5\u03C0", -1, 1],
  ["\u03C0\u03BF\u03B4\u03B1\u03C1", -1, 1],
  ["\u03BA\u03C5\u03BC\u03B1\u03C4", -1, 1],
  ["\u03C0\u03C1\u03C9\u03C4", -1, 1],
  ["\u03BB\u03B1\u03C7", -1, 1],
  ["\u03C0\u03B1\u03BD\u03C4\u03B1\u03C7", -1, 1],
];

const a_52: Rule[] = [
  ["\u03C4\u03C3\u03B1", -1, 1],
  ["\u03C7\u03B1\u03B4", -1, 1],
  ["\u03BC\u03B5\u03B4", -1, 1],
  ["\u03BB\u03B1\u03BC\u03C0\u03B9\u03B4", -1, 1],
  ["\u03B4\u03B5", -1, 1],
  ["\u03C0\u03BB\u03B5", -1, 1],
  ["\u03BC\u03B5\u03C3\u03B1\u03B6", -1, 1],
  ["\u03B4\u03B5\u03C3\u03C0\u03BF\u03B6", -1, 1],
  ["\u03B1\u03B9\u03B8", -1, 1],
  ["\u03C6\u03B1\u03C1\u03BC\u03B1\u03BA", -1, 1],
  ["\u03B1\u03B3\u03BA", -1, 1],
  ["\u03B1\u03BD\u03B7\u03BA", -1, 1],
  ["\u03BB", -1, 1],
  ["\u03BC", -1, 1],
  ["\u03B1\u03BC", 13, 1],
  ["\u03B2\u03C1\u03BF\u03BC", 13, 1],
  ["\u03C5\u03C0\u03BF\u03C4\u03B5\u03B9\u03BD", -1, 1],
  ["\u03B5\u03BA\u03BB\u03B9\u03C0", -1, 1],
  ["\u03C1", -1, 1],
  ["\u03B5\u03BD\u03B4\u03B9\u03B1\u03C6\u03B5\u03C1", 18, 1],
  ["\u03B1\u03BD\u03B1\u03C1\u03C1", 18, 1],
  ["\u03C0\u03B1\u03C4", -1, 1],
  ["\u03BA\u03B1\u03B8\u03B1\u03C1\u03B5\u03C5", -1, 1],
  ["\u03B4\u03B5\u03C5\u03C4\u03B5\u03C1\u03B5\u03C5", -1, 1],
  ["\u03BB\u03B5\u03C7", -1, 1],
];

const a_53: Rule[] = [
  ["\u03BF\u03C5\u03C3\u03B1", -1, 1],
  ["\u03BF\u03C5\u03C3\u03B5", -1, 1],
  ["\u03BF\u03C5\u03C3\u03B5\u03C3", -1, 1],
];

const a_54: Rule[] = [
  ["\u03C0\u03B5\u03BB", -1, 1],
  ["\u03BB\u03BB", -1, 1],
  ["\u03C3\u03BC\u03B7\u03BD", -1, 1],
  ["\u03C1\u03C0", -1, 1],
  ["\u03C0\u03C1", -1, 1],
  ["\u03C6\u03C1", -1, 1],
  ["\u03C7\u03BF\u03C1\u03C4", -1, 1],
  ["\u03BF\u03C6", -1, 1],
  ["\u03C8\u03BF\u03C6", 7, -1],
  ["\u03C3\u03C6", -1, 1],
  ["\u03BB\u03BF\u03C7", -1, 1],
  ["\u03BD\u03B1\u03C5\u03BB\u03BF\u03C7", 10, -1],
];

const a_55: Rule[] = [
  ["\u03B1\u03BC\u03B1\u03BB\u03BB\u03B9", -1, 1],
  ["\u03BB", -1, 1],
  ["\u03B1\u03BC\u03B1\u03BB", 1, 1],
  ["\u03BC", -1, 1],
  ["\u03BF\u03C5\u03BB\u03B1\u03BC", 3, 1],
  ["\u03B5\u03BD", -1, 1],
  ["\u03B4\u03B5\u03C1\u03B2\u03B5\u03BD", 5, 1],
  ["\u03C0", -1, 1],
  ["\u03B1\u03B5\u03B9\u03C0", 7, 1],
  ["\u03B1\u03C1\u03C4\u03B9\u03C0", 7, 1],
  ["\u03C3\u03C5\u03BC\u03C0", 7, 1],
  ["\u03BD\u03B5\u03BF\u03C0", 7, 1],
  ["\u03BA\u03C1\u03BF\u03BA\u03B1\u03BB\u03BF\u03C0", 7, 1],
  ["\u03BF\u03BB\u03BF\u03C0", 7, 1],
  ["\u03C0\u03C1\u03BF\u03C3\u03C9\u03C0\u03BF\u03C0", 7, 1],
  ["\u03C3\u03B9\u03B4\u03B7\u03C1\u03BF\u03C0", 7, 1],
  ["\u03B4\u03C1\u03BF\u03C3\u03BF\u03C0", 7, 1],
  ["\u03B1\u03C3\u03C0", 7, 1],
  ["\u03B1\u03BD\u03C5\u03C0", 7, 1],
  ["\u03C1", -1, 1],
  ["\u03B1\u03C3\u03C0\u03B1\u03C1", 19, 1],
  ["\u03C7\u03B1\u03C1", 19, 1],
  ["\u03B1\u03C7\u03B1\u03C1", 21, 1],
  ["\u03B1\u03C0\u03B5\u03C1", 19, 1],
  ["\u03C4\u03C1", 19, 1],
  ["\u03BF\u03C5\u03C1", 19, 1],
  ["\u03C4", -1, 1],
  ["\u03B4\u03B9\u03B1\u03C4", 26, 1],
  ["\u03B5\u03C0\u03B9\u03C4", 26, 1],
  ["\u03C3\u03C5\u03BD\u03C4", 26, 1],
  ["\u03BF\u03BC\u03BF\u03C4", 26, 1],
  ["\u03BD\u03BF\u03BC\u03BF\u03C4", 30, 1],
  ["\u03B1\u03C0\u03BF\u03C4", 26, 1],
  ["\u03C5\u03C0\u03BF\u03C4", 26, 1],
  ["\u03B1\u03B2\u03B1\u03C3\u03C4", 26, 1],
  ["\u03B1\u03B9\u03BC\u03BF\u03C3\u03C4", 26, 1],
  ["\u03C0\u03C1\u03BF\u03C3\u03C4", 26, 1],
  ["\u03B1\u03BD\u03C5\u03C3\u03C4", 26, 1],
  ["\u03BD\u03B1\u03C5", -1, 1],
  ["\u03B1\u03C6", -1, 1],
  ["\u03BE\u03B5\u03C6", -1, 1],
  ["\u03B1\u03B4\u03B7\u03C6", -1, 1],
  ["\u03C0\u03B1\u03BC\u03C6", -1, 1],
  ["\u03C0\u03BF\u03BB\u03C5\u03C6", -1, 1],
];

const a_56: Rule[] = [
  ["\u03B1\u03B3\u03B1", -1, 1],
  ["\u03B1\u03B3\u03B5", -1, 1],
  ["\u03B1\u03B3\u03B5\u03C3", -1, 1],
];

const a_57: Rule[] = [
  ["\u03B7\u03C3\u03B1", -1, 1],
  ["\u03B7\u03C3\u03B5", -1, 1],
  ["\u03B7\u03C3\u03BF\u03C5", -1, 1],
];

const a_58: Rule[] = [
  ["\u03BD", -1, 1],
  ["\u03B4\u03C9\u03B4\u03B5\u03BA\u03B1\u03BD", 0, 1],
  ["\u03B5\u03C0\u03C4\u03B1\u03BD", 0, 1],
  ["\u03BC\u03B5\u03B3\u03B1\u03BB\u03BF\u03BD", 0, 1],
  ["\u03B5\u03C1\u03B7\u03BC\u03BF\u03BD", 0, 1],
  ["\u03C7\u03B5\u03C1\u03C3\u03BF\u03BD", 0, 1],
];

const a_59: Rule[] = [["\u03B7\u03C3\u03C4\u03B5", -1, 1]];

const a_60: Rule[] = [
  ["\u03C3\u03B2", -1, 1],
  ["\u03B1\u03C3\u03B2", 0, 1],
  ["\u03B1\u03C0\u03BB", -1, 1],
  ["\u03B1\u03B5\u03B9\u03BC\u03BD", -1, 1],
  ["\u03C7\u03C1", -1, 1],
  ["\u03B1\u03C7\u03C1", 4, 1],
  ["\u03BA\u03BF\u03B9\u03BD\u03BF\u03C7\u03C1", 4, 1],
  ["\u03B4\u03C5\u03C3\u03C7\u03C1", 4, 1],
  ["\u03B5\u03C5\u03C7\u03C1", 4, 1],
  ["\u03C0\u03B1\u03BB\u03B9\u03BC\u03C8", -1, 1],
];

const a_61: Rule[] = [
  ["\u03BF\u03C5\u03BD\u03B5", -1, 1],
  ["\u03B7\u03B8\u03BF\u03C5\u03BD\u03B5", 0, 1],
  ["\u03B7\u03C3\u03BF\u03C5\u03BD\u03B5", 0, 1],
];

// deno-fmt-ignore
const a_62: Rule[] = [
  ["\u03C3\u03C0\u03B9", -1, 1],
  ["\u03BD", -1, 1],
  ["\u03B5\u03BE\u03C9\u03BD", 1, 1],
  ["\u03C1", -1, 1],
  ["\u03C3\u03C4\u03C1\u03B1\u03B2\u03BF\u03BC\u03BF\u03C5\u03C4\u03C3",-1,1],
  ["\u03BA\u03B1\u03BA\u03BF\u03BC\u03BF\u03C5\u03C4\u03C3", -1, 1],
];

const a_63: Rule[] = [
  ["\u03BF\u03C5\u03BC\u03B5", -1, 1],
  ["\u03B7\u03B8\u03BF\u03C5\u03BC\u03B5", 0, 1],
  ["\u03B7\u03C3\u03BF\u03C5\u03BC\u03B5", 0, 1],
];

const a_64: Rule[] = [
  ["\u03B1\u03B6", -1, 1],
  ["\u03C9\u03C1\u03B9\u03BF\u03C0\u03BB", -1, 1],
  ["\u03B1\u03C3\u03BF\u03C5\u03C3", -1, 1],
  ["\u03C0\u03B1\u03C1\u03B1\u03C3\u03BF\u03C5\u03C3", 2, 1],
  ["\u03B1\u03BB\u03BB\u03BF\u03C3\u03BF\u03C5\u03C3", -1, 1],
  ["\u03C6", -1, 1],
  ["\u03C7", -1, 1],
];

const a_65: Rule[] = [
  ["\u03BC\u03B1\u03C4\u03B1", -1, 1],
  ["\u03BC\u03B1\u03C4\u03C9\u03BD", -1, 1],
  ["\u03BC\u03B1\u03C4\u03BF\u03C3", -1, 1],
];

const a_66: Rule[] = [
  ["\u03B1", -1, 1],
  ["\u03B9\u03BF\u03C5\u03BC\u03B1", 0, 1],
  ["\u03BF\u03BC\u03BF\u03C5\u03BD\u03B1", 0, 1],
  ["\u03B9\u03BF\u03BC\u03BF\u03C5\u03BD\u03B1", 2, 1],
  ["\u03BF\u03C3\u03BF\u03C5\u03BD\u03B1", 0, 1],
  ["\u03B9\u03BF\u03C3\u03BF\u03C5\u03BD\u03B1", 4, 1],
  ["\u03B5", -1, 1],
  ["\u03B1\u03B3\u03B1\u03C4\u03B5", 6, 1],
  ["\u03B7\u03BA\u03B1\u03C4\u03B5", 6, 1],
  ["\u03B7\u03B8\u03B7\u03BA\u03B1\u03C4\u03B5", 8, 1],
  ["\u03B7\u03C3\u03B1\u03C4\u03B5", 6, 1],
  ["\u03BF\u03C5\u03C3\u03B1\u03C4\u03B5", 6, 1],
  ["\u03B5\u03B9\u03C4\u03B5", 6, 1],
  ["\u03B7\u03B8\u03B5\u03B9\u03C4\u03B5", 12, 1],
  ["\u03B9\u03B5\u03BC\u03B1\u03C3\u03C4\u03B5", 6, 1],
  ["\u03BF\u03C5\u03BC\u03B1\u03C3\u03C4\u03B5", 6, 1],
  ["\u03B9\u03BF\u03C5\u03BC\u03B1\u03C3\u03C4\u03B5", 15, 1],
  ["\u03B9\u03B5\u03C3\u03B1\u03C3\u03C4\u03B5", 6, 1],
  ["\u03BF\u03C3\u03B1\u03C3\u03C4\u03B5", 6, 1],
  ["\u03B9\u03BF\u03C3\u03B1\u03C3\u03C4\u03B5", 18, 1],
  ["\u03B7", -1, 1],
  ["\u03B9", -1, 1],
  ["\u03B1\u03BC\u03B1\u03B9", 21, 1],
  ["\u03B9\u03B5\u03BC\u03B1\u03B9", 21, 1],
  ["\u03BF\u03BC\u03B1\u03B9", 21, 1],
  ["\u03BF\u03C5\u03BC\u03B1\u03B9", 21, 1],
  ["\u03B1\u03C3\u03B1\u03B9", 21, 1],
  ["\u03B5\u03C3\u03B1\u03B9", 21, 1],
  ["\u03B9\u03B5\u03C3\u03B1\u03B9", 27, 1],
  ["\u03B1\u03C4\u03B1\u03B9", 21, 1],
  ["\u03B5\u03C4\u03B1\u03B9", 21, 1],
  ["\u03B9\u03B5\u03C4\u03B1\u03B9", 30, 1],
  ["\u03BF\u03BD\u03C4\u03B1\u03B9", 21, 1],
  ["\u03BF\u03C5\u03BD\u03C4\u03B1\u03B9", 21, 1],
  ["\u03B9\u03BF\u03C5\u03BD\u03C4\u03B1\u03B9", 33, 1],
  ["\u03B5\u03B9", 21, 1],
  ["\u03B1\u03B5\u03B9", 35, 1],
  ["\u03B7\u03B8\u03B5\u03B9", 35, 1],
  ["\u03B7\u03C3\u03B5\u03B9", 35, 1],
  ["\u03BF\u03B9", 21, 1],
  ["\u03B1\u03BD", -1, 1],
  ["\u03B1\u03B3\u03B1\u03BD", 40, 1],
  ["\u03B7\u03BA\u03B1\u03BD", 40, 1],
  ["\u03B7\u03B8\u03B7\u03BA\u03B1\u03BD", 42, 1],
  ["\u03B7\u03C3\u03B1\u03BD", 40, 1],
  ["\u03BF\u03C5\u03C3\u03B1\u03BD", 40, 1],
  ["\u03BF\u03BD\u03C4\u03BF\u03C5\u03C3\u03B1\u03BD", 45, 1],
  ["\u03B9\u03BF\u03BD\u03C4\u03BF\u03C5\u03C3\u03B1\u03BD", 46, 1],
  ["\u03BF\u03BD\u03C4\u03B1\u03BD", 40, 1],
  ["\u03B9\u03BF\u03BD\u03C4\u03B1\u03BD", 48, 1],
  ["\u03BF\u03C5\u03BD\u03C4\u03B1\u03BD", 40, 1],
  ["\u03B9\u03BF\u03C5\u03BD\u03C4\u03B1\u03BD", 50, 1],
  ["\u03BF\u03C4\u03B1\u03BD", 40, 1],
  ["\u03B9\u03BF\u03C4\u03B1\u03BD", 52, 1],
  ["\u03BF\u03BC\u03B1\u03C3\u03C4\u03B1\u03BD", 40, 1],
  ["\u03B9\u03BF\u03BC\u03B1\u03C3\u03C4\u03B1\u03BD", 54, 1],
  ["\u03BF\u03C3\u03B1\u03C3\u03C4\u03B1\u03BD", 40, 1],
  ["\u03B9\u03BF\u03C3\u03B1\u03C3\u03C4\u03B1\u03BD", 56, 1],
  ["\u03BF\u03C5\u03BD", -1, 1],
  ["\u03B7\u03B8\u03BF\u03C5\u03BD", 58, 1],
  ["\u03BF\u03BC\u03BF\u03C5\u03BD", 58, 1],
  ["\u03B9\u03BF\u03BC\u03BF\u03C5\u03BD", 60, 1],
  ["\u03B7\u03C3\u03BF\u03C5\u03BD", 58, 1],
  ["\u03BF\u03C3\u03BF\u03C5\u03BD", 58, 1],
  ["\u03B9\u03BF\u03C3\u03BF\u03C5\u03BD", 63, 1],
  ["\u03C9\u03BD", -1, 1],
  ["\u03B7\u03B4\u03C9\u03BD", 65, 1],
  ["\u03BF", -1, 1],
  ["\u03B1\u03C3", -1, 1],
  ["\u03B5\u03C3", -1, 1],
  ["\u03B7\u03B4\u03B5\u03C3", 69, 1],
  ["\u03B7\u03C3\u03B5\u03C3", 69, 1],
  ["\u03B7\u03C3", -1, 1],
  ["\u03B5\u03B9\u03C3", -1, 1],
  ["\u03B7\u03B8\u03B5\u03B9\u03C3", 73, 1],
  ["\u03BF\u03C3", -1, 1],
  ["\u03C5\u03C3", -1, 1],
  ["\u03BF\u03C5\u03C3", 76, 1],
  ["\u03C5", -1, 1],
  ["\u03BF\u03C5", 78, 1],
  ["\u03C9", -1, 1],
  ["\u03B1\u03C9", 80, 1],
  ["\u03B7\u03B8\u03C9", 80, 1],
  ["\u03B7\u03C3\u03C9", 80, 1],
];

const a_67: Rule[] = [
  ["\u03BF\u03C4\u03B5\u03C1", -1, 1],
  ["\u03B5\u03C3\u03C4\u03B5\u03C1", -1, 1],
  ["\u03C5\u03C4\u03B5\u03C1", -1, 1],
  ["\u03C9\u03C4\u03B5\u03C1", -1, 1],
  ["\u03BF\u03C4\u03B1\u03C4", -1, 1],
  ["\u03B5\u03C3\u03C4\u03B1\u03C4", -1, 1],
  ["\u03C5\u03C4\u03B1\u03C4", -1, 1],
  ["\u03C9\u03C4\u03B1\u03C4", -1, 1],
];

const g_v = [81, 65, 16, 1];

const g_v2 = [81, 65, 0, 1];

export class GreekStemmer extends Stemmer {
  private B_test1 = false;

  stopWords = undefined;

  r_has_min_length() {
    if (!(this.current.length >= 3)) {
      return false;
    }
    return true;
  }

  r_tolower() {
    while (true) {
      const v_1 = this.limit - this.cursor;
      lab0: {
        this.ket = this.cursor;
        const among_var = this.find_among_b(a_0);
        if (among_var == 0) {
          break lab0;
        }
        this.bra = this.cursor;
        switch (among_var) {
          case 1:
            if (!this.slice_from("\u03B1")) {
              return false;
            }
            break;
          case 2:
            if (!this.slice_from("\u03B2")) {
              return false;
            }
            break;
          case 3:
            if (!this.slice_from("\u03B3")) {
              return false;
            }
            break;
          case 4:
            if (!this.slice_from("\u03B4")) {
              return false;
            }
            break;
          case 5:
            if (!this.slice_from("\u03B5")) {
              return false;
            }
            break;
          case 6:
            if (!this.slice_from("\u03B6")) {
              return false;
            }
            break;
          case 7:
            if (!this.slice_from("\u03B7")) {
              return false;
            }
            break;
          case 8:
            if (!this.slice_from("\u03B8")) {
              return false;
            }
            break;
          case 9:
            if (!this.slice_from("\u03B9")) {
              return false;
            }
            break;
          case 10:
            if (!this.slice_from("\u03BA")) {
              return false;
            }
            break;
          case 11:
            if (!this.slice_from("\u03BB")) {
              return false;
            }
            break;
          case 12:
            if (!this.slice_from("\u03BC")) {
              return false;
            }
            break;
          case 13:
            if (!this.slice_from("\u03BD")) {
              return false;
            }
            break;
          case 14:
            if (!this.slice_from("\u03BE")) {
              return false;
            }
            break;
          case 15:
            if (!this.slice_from("\u03BF")) {
              return false;
            }
            break;
          case 16:
            if (!this.slice_from("\u03C0")) {
              return false;
            }
            break;
          case 17:
            if (!this.slice_from("\u03C1")) {
              return false;
            }
            break;
          case 18:
            if (!this.slice_from("\u03C3")) {
              return false;
            }
            break;
          case 19:
            if (!this.slice_from("\u03C4")) {
              return false;
            }
            break;
          case 20:
            if (!this.slice_from("\u03C5")) {
              return false;
            }
            break;
          case 21:
            if (!this.slice_from("\u03C6")) {
              return false;
            }
            break;
          case 22:
            if (!this.slice_from("\u03C7")) {
              return false;
            }
            break;
          case 23:
            if (!this.slice_from("\u03C8")) {
              return false;
            }
            break;
          case 24:
            if (!this.slice_from("\u03C9")) {
              return false;
            }
            break;
          case 25:
            if (this.cursor <= this.limit_backward) {
              break lab0;
            }
            this.cursor--;
            break;
        }
        continue;
      }
      this.cursor = this.limit - v_1;
      break;
    }
    return true;
  }

  r_step1() {
    this.ket = this.cursor;
    const among_var = this.find_among_b(a_1);
    if (among_var == 0) {
      return false;
    }
    this.bra = this.cursor;
    switch (among_var) {
      case 1:
        if (!this.slice_from("\u03C6\u03B1")) {
          return false;
        }
        break;
      case 2:
        if (!this.slice_from("\u03C3\u03BA\u03B1")) {
          return false;
        }
        break;
      case 3:
        if (!this.slice_from("\u03BF\u03BB\u03BF")) {
          return false;
        }
        break;
      case 4:
        if (!this.slice_from("\u03C3\u03BF")) {
          return false;
        }
        break;
      case 5:
        if (!this.slice_from("\u03C4\u03B1\u03C4\u03BF")) {
          return false;
        }
        break;
      case 6:
        if (!this.slice_from("\u03BA\u03C1\u03B5")) {
          return false;
        }
        break;
      case 7:
        if (!this.slice_from("\u03C0\u03B5\u03C1")) {
          return false;
        }
        break;
      case 8:
        if (!this.slice_from("\u03C4\u03B5\u03C1")) {
          return false;
        }
        break;
      case 9:
        if (!this.slice_from("\u03C6\u03C9")) {
          return false;
        }
        break;
      case 10:
        if (!this.slice_from("\u03BA\u03B1\u03B8\u03B5\u03C3\u03C4")) {
          return false;
        }
        break;
      case 11:
        if (!this.slice_from("\u03B3\u03B5\u03B3\u03BF\u03BD")) {
          return false;
        }
        break;
    }
    this.B_test1 = false;
    return true;
  }

  r_steps1() {
    this.ket = this.cursor;
    if (this.find_among_b(a_3) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    this.ket = this.cursor;
    this.bra = this.cursor;
    const among_var = this.find_among_b(a_2);
    if (among_var == 0) {
      return false;
    }
    if (this.cursor > this.limit_backward) {
      return false;
    }
    switch (among_var) {
      case 1:
        if (!this.slice_from("\u03B9")) {
          return false;
        }
        break;
      case 2:
        if (!this.slice_from("\u03B9\u03B6")) {
          return false;
        }
        break;
    }
    return true;
  }

  r_steps2() {
    this.ket = this.cursor;
    if (this.find_among_b(a_5) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    this.ket = this.cursor;
    this.bra = this.cursor;
    if (this.find_among_b(a_4) == 0) {
      return false;
    }
    if (this.cursor > this.limit_backward) {
      return false;
    }
    if (!this.slice_from("\u03C9\u03BD")) {
      return false;
    }
    return true;
  }

  r_steps3() {
    this.ket = this.cursor;
    if (this.find_among_b(a_7) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    lab0: {
      const v_1 = this.limit - this.cursor;
      lab1: {
        if (!this.eq_s_b("\u03B9\u03C3\u03B1")) {
          break lab1;
        }
        if (this.cursor > this.limit_backward) {
          break lab1;
        }
        if (!this.slice_from("\u03B9\u03C3")) {
          return false;
        }
        break lab0;
      }
      this.cursor = this.limit - v_1;
      this.ket = this.cursor;
      this.bra = this.cursor;
      const among_var = this.find_among_b(a_6);
      if (among_var == 0) {
        return false;
      }
      if (this.cursor > this.limit_backward) {
        return false;
      }
      switch (among_var) {
        case 1:
          if (!this.slice_from("\u03B9")) {
            return false;
          }
          break;
        case 2:
          if (!this.slice_from("\u03B9\u03C3")) {
            return false;
          }
          break;
      }
    }
    return true;
  }

  r_steps4() {
    this.ket = this.cursor;
    if (this.find_among_b(a_9) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    this.ket = this.cursor;
    this.bra = this.cursor;
    if (this.find_among_b(a_8) == 0) {
      return false;
    }
    if (this.cursor > this.limit_backward) {
      return false;
    }
    if (!this.slice_from("\u03B9")) {
      return false;
    }
    return true;
  }

  r_steps5() {
    this.ket = this.cursor;
    if (this.find_among_b(a_11) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    this.ket = this.cursor;
    this.bra = this.cursor;
    const among_var = this.find_among_b(a_10);
    if (among_var == 0) {
      return false;
    }
    if (this.cursor > this.limit_backward) {
      return false;
    }
    switch (among_var) {
      case 1:
        if (!this.slice_from("\u03B9")) {
          return false;
        }
        break;
      case 2:
        if (!this.slice_from("\u03B9\u03C3\u03C4")) {
          return false;
        }
        break;
    }
    return true;
  }

  r_steps6() {
    this.ket = this.cursor;
    if (this.find_among_b(a_14) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    lab0: {
      const v_1 = this.limit - this.cursor;
      lab1: {
        this.ket = this.cursor;
        this.bra = this.cursor;
        const among_var = this.find_among_b(a_12);
        if (among_var == 0) {
          break lab1;
        }
        if (this.cursor > this.limit_backward) {
          break lab1;
        }
        switch (among_var) {
          case 1:
            if (!this.slice_from("\u03B9\u03C3\u03BC")) {
              return false;
            }
            break;
          case 2:
            if (!this.slice_from("\u03B9")) {
              return false;
            }
            break;
        }
        break lab0;
      }
      this.cursor = this.limit - v_1;
      this.ket = this.cursor;
      const among_var = this.find_among_b(a_13);
      if (among_var == 0) {
        return false;
      }
      this.bra = this.cursor;
      switch (among_var) {
        case 1:
          if (!this.slice_from("\u03B1\u03B3\u03BD\u03C9\u03C3\u03C4")) {
            return false;
          }
          break;
        case 2:
          if (!this.slice_from("\u03B1\u03C4\u03BF\u03BC")) {
            return false;
          }
          break;
        case 3:
          if (!this.slice_from("\u03B3\u03BD\u03C9\u03C3\u03C4")) {
            return false;
          }
          break;
        case 4:
          if (!this.slice_from("\u03B5\u03B8\u03BD")) {
            return false;
          }
          break;
        case 5:
          if (!this.slice_from("\u03B5\u03BA\u03BB\u03B5\u03BA\u03C4")) {
            return false;
          }
          break;
        case 6:
          if (!this.slice_from("\u03C3\u03BA\u03B5\u03C0\u03C4")) {
            return false;
          }
          break;
        case 7:
          if (!this.slice_from("\u03C4\u03BF\u03C0")) {
            return false;
          }
          break;
        case 8:
          if (
            !this.slice_from("\u03B1\u03BB\u03B5\u03BE\u03B1\u03BD\u03B4\u03C1")
          ) {
            return false;
          }
          break;
        case 9:
          if (!this.slice_from("\u03B2\u03C5\u03B6\u03B1\u03BD\u03C4")) {
            return false;
          }
          break;
        case 10:
          if (!this.slice_from("\u03B8\u03B5\u03B1\u03C4\u03C1")) {
            return false;
          }
          break;
      }
    }
    return true;
  }

  r_steps7() {
    this.ket = this.cursor;
    if (this.find_among_b(a_16) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    this.ket = this.cursor;
    this.bra = this.cursor;
    if (this.find_among_b(a_15) == 0) {
      return false;
    }
    if (this.cursor > this.limit_backward) {
      return false;
    }
    if (!this.slice_from("\u03B1\u03C1\u03B1\u03BA")) {
      return false;
    }
    return true;
  }

  r_steps8() {
    this.ket = this.cursor;
    if (this.find_among_b(a_18) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    lab0: {
      const v_1 = this.limit - this.cursor;
      lab1: {
        this.ket = this.cursor;
        this.bra = this.cursor;
        const among_var = this.find_among_b(a_17);
        if (among_var == 0) {
          break lab1;
        }
        if (this.cursor > this.limit_backward) {
          break lab1;
        }
        switch (among_var) {
          case 1:
            if (!this.slice_from("\u03B1\u03BA")) {
              return false;
            }
            break;
          case 2:
            if (!this.slice_from("\u03B9\u03C4\u03C3")) {
              return false;
            }
            break;
        }
        break lab0;
      }
      this.cursor = this.limit - v_1;
      this.ket = this.cursor;
      this.bra = this.cursor;
      if (!this.eq_s_b("\u03BA\u03BF\u03C1")) {
        return false;
      }
      if (!this.slice_from("\u03B9\u03C4\u03C3")) {
        return false;
      }
    }
    return true;
  }

  r_steps9() {
    this.ket = this.cursor;
    if (this.find_among_b(a_21) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    lab0: {
      const v_1 = this.limit - this.cursor;
      lab1: {
        this.ket = this.cursor;
        this.bra = this.cursor;
        if (this.find_among_b(a_19) == 0) {
          break lab1;
        }
        if (this.cursor > this.limit_backward) {
          break lab1;
        }
        if (!this.slice_from("\u03B9\u03B4")) {
          return false;
        }
        break lab0;
      }
      this.cursor = this.limit - v_1;
      this.ket = this.cursor;
      this.bra = this.cursor;
      if (this.find_among_b(a_20) == 0) {
        return false;
      }
      if (!this.slice_from("\u03B9\u03B4")) {
        return false;
      }
    }
    return true;
  }

  r_steps10() {
    this.ket = this.cursor;
    if (this.find_among_b(a_23) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    this.ket = this.cursor;
    this.bra = this.cursor;
    if (this.find_among_b(a_22) == 0) {
      return false;
    }
    if (this.cursor > this.limit_backward) {
      return false;
    }
    if (!this.slice_from("\u03B9\u03C3\u03BA")) {
      return false;
    }
    return true;
  }

  r_step2a() {
    this.ket = this.cursor;
    if (this.find_among_b(a_24) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    {
      const v_1 = this.limit - this.cursor;
      lab0: {
        if (this.find_among_b(a_25) == 0) {
          break lab0;
        }
        return false;
      }
      this.cursor = this.limit - v_1;
    }
    {
      const c1 = this.cursor;
      this.insert(this.cursor, this.cursor, "\u03B1\u03B4");
      this.cursor = c1;
    }
    return true;
  }

  r_step2b() {
    this.ket = this.cursor;
    if (this.find_among_b(a_26) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.ket = this.cursor;
    this.bra = this.cursor;
    if (this.find_among_b(a_27) == 0) {
      return false;
    }
    if (!this.slice_from("\u03B5\u03B4")) {
      return false;
    }
    return true;
  }

  r_step2c() {
    this.ket = this.cursor;
    if (this.find_among_b(a_28) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.ket = this.cursor;
    this.bra = this.cursor;
    if (this.find_among_b(a_29) == 0) {
      return false;
    }
    if (!this.slice_from("\u03BF\u03C5\u03B4")) {
      return false;
    }
    return true;
  }

  r_step2d() {
    this.ket = this.cursor;
    if (this.find_among_b(a_30) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    this.ket = this.cursor;
    this.bra = this.cursor;
    if (this.find_among_b(a_31) == 0) {
      return false;
    }
    if (this.cursor > this.limit_backward) {
      return false;
    }
    if (!this.slice_from("\u03B5")) {
      return false;
    }
    return true;
  }

  r_step3() {
    this.ket = this.cursor;
    if (this.find_among_b(a_32) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    this.ket = this.cursor;
    this.bra = this.cursor;
    if (!this.in_grouping_b(g_v, 945, 969)) {
      return false;
    }
    if (!this.slice_from("\u03B9")) {
      return false;
    }
    return true;
  }

  r_step4() {
    this.ket = this.cursor;
    if (this.find_among_b(a_33) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    lab0: {
      const v_1 = this.limit - this.cursor;
      lab1: {
        this.ket = this.cursor;
        this.bra = this.cursor;
        if (!this.in_grouping_b(g_v, 945, 969)) {
          break lab1;
        }
        if (!this.slice_from("\u03B9\u03BA")) {
          return false;
        }
        break lab0;
      }
      this.cursor = this.limit - v_1;
      this.ket = this.cursor;
    }
    this.bra = this.cursor;
    if (this.find_among_b(a_34) == 0) {
      return false;
    }
    if (this.cursor > this.limit_backward) {
      return false;
    }
    if (!this.slice_from("\u03B9\u03BA")) {
      return false;
    }
    return true;
  }

  r_step5a() {
    const v_1 = this.limit - this.cursor;
    lab0: {
      if (!this.eq_s_b("\u03B1\u03B3\u03B1\u03BC\u03B5")) {
        break lab0;
      }
      if (this.cursor > this.limit_backward) {
        break lab0;
      }
      if (!this.slice_from("\u03B1\u03B3\u03B1\u03BC")) {
        return false;
      }
    }
    this.cursor = this.limit - v_1;
    const v_2 = this.limit - this.cursor;
    lab1: {
      this.ket = this.cursor;
      if (this.find_among_b(a_35) == 0) {
        break lab1;
      }
      this.bra = this.cursor;
      if (!this.slice_del()) {
        return false;
      }
      this.B_test1 = false;
    }
    this.cursor = this.limit - v_2;
    this.ket = this.cursor;
    if (!this.eq_s_b("\u03B1\u03BC\u03B5")) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    this.ket = this.cursor;
    this.bra = this.cursor;
    if (this.find_among_b(a_36) == 0) {
      return false;
    }
    if (this.cursor > this.limit_backward) {
      return false;
    }
    if (!this.slice_from("\u03B1\u03BC")) {
      return false;
    }
    return true;
  }

  r_step5b() {
    const v_1 = this.limit - this.cursor;
    lab0: {
      this.ket = this.cursor;
      if (this.find_among_b(a_38) == 0) {
        break lab0;
      }
      this.bra = this.cursor;
      if (!this.slice_del()) {
        return false;
      }
      this.B_test1 = false;
      this.ket = this.cursor;
      this.bra = this.cursor;
      if (this.find_among_b(a_37) == 0) {
        break lab0;
      }
      if (this.cursor > this.limit_backward) {
        break lab0;
      }
      if (!this.slice_from("\u03B1\u03B3\u03B1\u03BD")) {
        return false;
      }
    }
    this.cursor = this.limit - v_1;
    this.ket = this.cursor;
    if (!this.eq_s_b("\u03B1\u03BD\u03B5")) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    lab1: {
      const v_2 = this.limit - this.cursor;
      lab2: {
        this.ket = this.cursor;
        this.bra = this.cursor;
        if (!this.in_grouping_b(g_v2, 945, 969)) {
          break lab2;
        }
        if (!this.slice_from("\u03B1\u03BD")) {
          return false;
        }
        break lab1;
      }
      this.cursor = this.limit - v_2;
      this.ket = this.cursor;
    }
    this.bra = this.cursor;
    if (this.find_among_b(a_39) == 0) {
      return false;
    }
    if (this.cursor > this.limit_backward) {
      return false;
    }
    if (!this.slice_from("\u03B1\u03BD")) {
      return false;
    }
    return true;
  }

  r_step5c() {
    const v_1 = this.limit - this.cursor;
    lab0: {
      this.ket = this.cursor;
      if (this.find_among_b(a_40) == 0) {
        break lab0;
      }
      this.bra = this.cursor;
      if (!this.slice_del()) {
        return false;
      }
      this.B_test1 = false;
    }
    this.cursor = this.limit - v_1;
    this.ket = this.cursor;
    if (!this.eq_s_b("\u03B5\u03C4\u03B5")) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    lab1: {
      const v_2 = this.limit - this.cursor;
      lab2: {
        this.ket = this.cursor;
        this.bra = this.cursor;
        if (!this.in_grouping_b(g_v2, 945, 969)) {
          break lab2;
        }
        if (!this.slice_from("\u03B5\u03C4")) {
          return false;
        }
        break lab1;
      }
      this.cursor = this.limit - v_2;
      lab3: {
        this.ket = this.cursor;
        this.bra = this.cursor;
        if (this.find_among_b(a_41) == 0) {
          break lab3;
        }
        if (!this.slice_from("\u03B5\u03C4")) {
          return false;
        }
        break lab1;
      }
      this.cursor = this.limit - v_2;
      this.ket = this.cursor;
    }
    this.bra = this.cursor;
    if (this.find_among_b(a_42) == 0) {
      return false;
    }
    if (this.cursor > this.limit_backward) {
      return false;
    }
    if (!this.slice_from("\u03B5\u03C4")) {
      return false;
    }
    return true;
  }

  r_step5d() {
    this.ket = this.cursor;
    if (this.find_among_b(a_43) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    lab0: {
      const v_1 = this.limit - this.cursor;
      lab1: {
        this.ket = this.cursor;
        this.bra = this.cursor;
        if (!this.eq_s_b("\u03B1\u03C1\u03C7")) {
          break lab1;
        }
        if (this.cursor > this.limit_backward) {
          break lab1;
        }
        if (!this.slice_from("\u03BF\u03BD\u03C4")) {
          return false;
        }
        break lab0;
      }
      this.cursor = this.limit - v_1;
      this.ket = this.cursor;
      this.bra = this.cursor;
      if (!this.eq_s_b("\u03BA\u03C1\u03B5")) {
        return false;
      }
      if (!this.slice_from("\u03C9\u03BD\u03C4")) {
        return false;
      }
    }
    return true;
  }

  r_step5e() {
    this.ket = this.cursor;
    if (this.find_among_b(a_44) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    this.ket = this.cursor;
    this.bra = this.cursor;
    if (!this.eq_s_b("\u03BF\u03BD")) {
      return false;
    }
    if (this.cursor > this.limit_backward) {
      return false;
    }
    if (!this.slice_from("\u03BF\u03BC\u03B1\u03C3\u03C4")) {
      return false;
    }
    return true;
  }

  r_step5f() {
    const v_1 = this.limit - this.cursor;
    lab0: {
      this.ket = this.cursor;
      if (!this.eq_s_b("\u03B9\u03B5\u03C3\u03C4\u03B5")) {
        break lab0;
      }
      this.bra = this.cursor;
      if (!this.slice_del()) {
        return false;
      }
      this.B_test1 = false;
      this.ket = this.cursor;
      this.bra = this.cursor;
      if (this.find_among_b(a_45) == 0) {
        break lab0;
      }
      if (this.cursor > this.limit_backward) {
        break lab0;
      }
      if (!this.slice_from("\u03B9\u03B5\u03C3\u03C4")) {
        return false;
      }
    }
    this.cursor = this.limit - v_1;
    this.ket = this.cursor;
    if (!this.eq_s_b("\u03B5\u03C3\u03C4\u03B5")) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    this.ket = this.cursor;
    this.bra = this.cursor;
    if (this.find_among_b(a_46) == 0) {
      return false;
    }
    if (this.cursor > this.limit_backward) {
      return false;
    }
    if (!this.slice_from("\u03B9\u03B5\u03C3\u03C4")) {
      return false;
    }
    return true;
  }

  r_step5g() {
    const v_1 = this.limit - this.cursor;
    lab0: {
      this.ket = this.cursor;
      if (this.find_among_b(a_47) == 0) {
        break lab0;
      }
      this.bra = this.cursor;
      if (!this.slice_del()) {
        return false;
      }
      this.B_test1 = false;
    }
    this.cursor = this.limit - v_1;
    this.ket = this.cursor;
    if (this.find_among_b(a_50) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    lab1: {
      const v_2 = this.limit - this.cursor;
      lab2: {
        this.ket = this.cursor;
        this.bra = this.cursor;
        if (this.find_among_b(a_48) == 0) {
          break lab2;
        }
        if (!this.slice_from("\u03B7\u03BA")) {
          return false;
        }
        break lab1;
      }
      this.cursor = this.limit - v_2;
      this.ket = this.cursor;
      this.bra = this.cursor;
      if (this.find_among_b(a_49) == 0) {
        return false;
      }
      if (this.cursor > this.limit_backward) {
        return false;
      }
      if (!this.slice_from("\u03B7\u03BA")) {
        return false;
      }
    }
    return true;
  }

  r_step5h() {
    this.ket = this.cursor;
    if (this.find_among_b(a_53) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    lab0: {
      const v_1 = this.limit - this.cursor;
      lab1: {
        this.ket = this.cursor;
        this.bra = this.cursor;
        if (this.find_among_b(a_51) == 0) {
          break lab1;
        }
        if (!this.slice_from("\u03BF\u03C5\u03C3")) {
          return false;
        }
        break lab0;
      }
      this.cursor = this.limit - v_1;
      this.ket = this.cursor;
      this.bra = this.cursor;
      if (this.find_among_b(a_52) == 0) {
        return false;
      }
      if (this.cursor > this.limit_backward) {
        return false;
      }
      if (!this.slice_from("\u03BF\u03C5\u03C3")) {
        return false;
      }
    }
    return true;
  }

  r_step5i() {
    this.ket = this.cursor;
    if (this.find_among_b(a_56) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    lab0: {
      const v_1 = this.limit - this.cursor;
      lab1: {
        this.ket = this.cursor;
        this.bra = this.cursor;
        if (!this.eq_s_b("\u03BA\u03BF\u03BB\u03BB")) {
          break lab1;
        }
        if (!this.slice_from("\u03B1\u03B3")) {
          return false;
        }
        break lab0;
      }
      this.cursor = this.limit - v_1;
      lab2: {
        const v_2 = this.limit - this.cursor;
        lab3: {
          this.ket = this.cursor;
          this.bra = this.cursor;
          const among_var = this.find_among_b(a_54);
          if (among_var == 0) {
            break lab3;
          }
          switch (among_var) {
            case 1:
              if (!this.slice_from("\u03B1\u03B3")) {
                return false;
              }
              break;
          }
          break lab2;
        }
        this.cursor = this.limit - v_2;
        this.ket = this.cursor;
        this.bra = this.cursor;
        if (this.find_among_b(a_55) == 0) {
          return false;
        }
        if (this.cursor > this.limit_backward) {
          return false;
        }
        if (!this.slice_from("\u03B1\u03B3")) {
          return false;
        }
      }
    }
    return true;
  }

  r_step5j() {
    this.ket = this.cursor;
    if (this.find_among_b(a_57) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    this.ket = this.cursor;
    this.bra = this.cursor;
    if (this.find_among_b(a_58) == 0) {
      return false;
    }
    if (this.cursor > this.limit_backward) {
      return false;
    }
    if (!this.slice_from("\u03B7\u03C3")) {
      return false;
    }
    return true;
  }

  r_step5k() {
    this.ket = this.cursor;
    if (this.find_among_b(a_59) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    this.ket = this.cursor;
    this.bra = this.cursor;
    if (this.find_among_b(a_60) == 0) {
      return false;
    }
    if (this.cursor > this.limit_backward) {
      return false;
    }
    if (!this.slice_from("\u03B7\u03C3\u03C4")) {
      return false;
    }
    return true;
  }

  r_step5l() {
    this.ket = this.cursor;
    if (this.find_among_b(a_61) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    this.ket = this.cursor;
    this.bra = this.cursor;
    if (this.find_among_b(a_62) == 0) {
      return false;
    }
    if (this.cursor > this.limit_backward) {
      return false;
    }
    if (!this.slice_from("\u03BF\u03C5\u03BD")) {
      return false;
    }
    return true;
  }

  r_step5m() {
    this.ket = this.cursor;
    if (this.find_among_b(a_63) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    this.B_test1 = false;
    this.ket = this.cursor;
    this.bra = this.cursor;
    if (this.find_among_b(a_64) == 0) {
      return false;
    }
    if (this.cursor > this.limit_backward) {
      return false;
    }
    if (!this.slice_from("\u03BF\u03C5\u03BC")) {
      return false;
    }
    return true;
  }

  r_step6() {
    const v_1 = this.limit - this.cursor;
    lab0: {
      this.ket = this.cursor;
      if (this.find_among_b(a_65) == 0) {
        break lab0;
      }
      this.bra = this.cursor;
      if (!this.slice_from("\u03BC\u03B1")) {
        return false;
      }
    }
    this.cursor = this.limit - v_1;
    if (!this.B_test1) {
      return false;
    }
    this.ket = this.cursor;
    if (this.find_among_b(a_66) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    return true;
  }

  r_step7() {
    this.ket = this.cursor;
    if (this.find_among_b(a_67) == 0) {
      return false;
    }
    this.bra = this.cursor;
    if (!this.slice_del()) {
      return false;
    }
    return true;
  }

  stemHelper() {
    this.limit_backward = this.cursor;
    this.cursor = this.limit;
    const v_1 = this.limit - this.cursor;
    this.r_tolower();
    this.cursor = this.limit - v_1;
    if (!this.r_has_min_length()) {
      return false;
    }
    this.B_test1 = true;
    const v_2 = this.limit - this.cursor;
    this.r_step1();
    this.cursor = this.limit - v_2;
    const v_3 = this.limit - this.cursor;
    this.r_steps1();
    this.cursor = this.limit - v_3;
    const v_4 = this.limit - this.cursor;
    this.r_steps2();
    this.cursor = this.limit - v_4;
    const v_5 = this.limit - this.cursor;
    this.r_steps3();
    this.cursor = this.limit - v_5;
    const v_6 = this.limit - this.cursor;
    this.r_steps4();
    this.cursor = this.limit - v_6;
    const v_7 = this.limit - this.cursor;
    this.r_steps5();
    this.cursor = this.limit - v_7;
    const v_8 = this.limit - this.cursor;
    this.r_steps6();
    this.cursor = this.limit - v_8;
    const v_9 = this.limit - this.cursor;
    this.r_steps7();
    this.cursor = this.limit - v_9;
    const v_10 = this.limit - this.cursor;
    this.r_steps8();
    this.cursor = this.limit - v_10;
    const v_11 = this.limit - this.cursor;
    this.r_steps9();
    this.cursor = this.limit - v_11;
    const v_12 = this.limit - this.cursor;
    this.r_steps10();
    this.cursor = this.limit - v_12;
    const v_13 = this.limit - this.cursor;
    this.r_step2a();
    this.cursor = this.limit - v_13;
    const v_14 = this.limit - this.cursor;
    this.r_step2b();
    this.cursor = this.limit - v_14;
    const v_15 = this.limit - this.cursor;
    this.r_step2c();
    this.cursor = this.limit - v_15;
    const v_16 = this.limit - this.cursor;
    this.r_step2d();
    this.cursor = this.limit - v_16;
    const v_17 = this.limit - this.cursor;
    this.r_step3();
    this.cursor = this.limit - v_17;
    const v_18 = this.limit - this.cursor;
    this.r_step4();
    this.cursor = this.limit - v_18;
    const v_19 = this.limit - this.cursor;
    this.r_step5a();
    this.cursor = this.limit - v_19;
    const v_20 = this.limit - this.cursor;
    this.r_step5b();
    this.cursor = this.limit - v_20;
    const v_21 = this.limit - this.cursor;
    this.r_step5c();
    this.cursor = this.limit - v_21;
    const v_22 = this.limit - this.cursor;
    this.r_step5d();
    this.cursor = this.limit - v_22;
    const v_23 = this.limit - this.cursor;
    this.r_step5e();
    this.cursor = this.limit - v_23;
    const v_24 = this.limit - this.cursor;
    this.r_step5f();
    this.cursor = this.limit - v_24;
    const v_25 = this.limit - this.cursor;
    this.r_step5g();
    this.cursor = this.limit - v_25;
    const v_26 = this.limit - this.cursor;
    this.r_step5h();
    this.cursor = this.limit - v_26;
    const v_27 = this.limit - this.cursor;
    this.r_step5j();
    this.cursor = this.limit - v_27;
    const v_28 = this.limit - this.cursor;
    this.r_step5i();
    this.cursor = this.limit - v_28;
    const v_29 = this.limit - this.cursor;
    this.r_step5k();
    this.cursor = this.limit - v_29;
    const v_30 = this.limit - this.cursor;
    this.r_step5l();
    this.cursor = this.limit - v_30;
    const v_31 = this.limit - this.cursor;
    this.r_step5m();
    this.cursor = this.limit - v_31;
    const v_32 = this.limit - this.cursor;
    this.r_step6();
    this.cursor = this.limit - v_32;
    const v_33 = this.limit - this.cursor;
    this.r_step7();
    this.cursor = this.limit - v_33;
    this.cursor = this.limit_backward;
    return true;
  }
}
